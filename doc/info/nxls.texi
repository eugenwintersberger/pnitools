
@command{nxls} is somehow the Nexus counter part of @command{ls} on a Unix file
system. It lists the content of a Nexus file relative to a particular group
within the file.  Calling @command{nxls} is straight forward as can be seen 
in this example

@example
$ nxls [OPTIONS] NEXUSPATH
@end example

@noindent
@var{NEXUSPATH} is the Nexus path to the object or group whose content should be
listed. It is important that @var{NEXUSPATH} must be a full valid Nexus path.
Even in the simple case that the root node is the reference from which
@command{nxls} should start we have to add at least the :// to the file name
(see the examples section below for details).
For the sake of brevity @command{nxls} removes the first part of the path from
each output line which denotes the reference object refereed to by 
@var{NEXUSPATH}. 

Like most command line programs, @command{nxls} returns 0 on success and 1
otherwise.

@subsection Program options

@command{nxls} accepts the following command line arguments
@table @samp
@item -h
@itemx --help
print short program help

@item -r
@itemx --recursive
show the content of all subgroups of a given Nexus group

@item -a
@itemx --show-attributes
shows attributes in addition to groups and field.

@item -f
@itemx --full-path
shows the full path of every object

@item -l
@itemx --long
shows additional information for each object
@end table

@subsection Examples

In the simplest case we want to list all the object below the root group of the
file. This can be achieved with 

@smallexample
$ nxls nxls_test.nxs://
entry:NXentry
@end smallexample

@noindent
Note here that we had to add :// after the filename. This is necessary as the
program expects a full Nexus path to the base object. The filename alone is not
a valid path. In addition one should recognize that the leading / in the output
is removed. 
Finally, in this example, only the those objects are listed which reside
directly below the root node. 
For a recursive list through all the children of a particular group we have to 
add the @option{-r} as in the next example

@smallexample
$ nxls -r nxls_test.nxs://:NXentry/:NXinstrument
detector:NXdetector
detector:NXdetector/data
detector:NXdetector/description
detector:NXdetector/distance
detector:NXdetector/layout
detector:NXdetector/x_pixel_size
detector:NXdetector/y_pixel_size
name
source:NXsource
source:NXsource/name
source:NXsource/probe
source:NXsource/type
@end smallexample

@noindent
Here, all fields and groups below the instrument group of the Nexus file are
listed. Again, the base portion of the path is removed from the output. 
To obtain a full path for each object we have to add the @option{-f} option

@smallexample
$ nxls -rfa nxls_test.nx://:NXentry/:NXinstrument
/entry:NXentry/instrument:NXinstrument/detector:NXdetector
/entry:NXentry/instrument:NXinstrument/detector:NXdetector@@NX_class
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/data
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/data@@units
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/description
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/distance
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/distance@@units
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/layout
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/x_pixel_size
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/x_pixel_size@@units
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/y_pixel_size
/entry:NXentry/instrument:NXinstrument/detector:NXdetector/y_pixel_size@@units
/entry:NXentry/instrument:NXinstrument/name
/entry:NXentry/instrument:NXinstrument/name@@short_name
/entry:NXentry/instrument:NXinstrument/source:NXsource
/entry:NXentry/instrument:NXinstrument/source:NXsource@@NX_class
/entry:NXentry/instrument:NXinstrument/source:NXsource/name
/entry:NXentry/instrument:NXinstrument/source:NXsource/name@@short_name
/entry:NXentry/instrument:NXinstrument/source:NXsource/probe
/entry:NXentry/instrument:NXinstrument/source:NXsource/type
@end smallexample

@noindent
The additional @option{-a} adds also all attributes to the output. 
If more information on stored objects is required the @option{-l} can be used 

@smallexample
$> nxls -l nxls_test.nxs://:NXentry/:NXinstrument/:NXdetector
FIELD   UINT32  (0,2048)    data
ATTRIB  STRING  (1) data@@units
FIELD   STRING  (1) description
FIELD   FLOAT32 (1) distance
ATTRIB  STRING  (1) distance@@units
FIELD   STRING  (1) layout
FIELD   FLOAT32 (1) x_pixel_size
ATTRIB  STRING  (1) x_pixel_size@@units
FIELD   FLOAT32 (1) y_pixel_size
ATTRIB  STRING  (1) y_pixel_size@@units
@end smallexample

@noindent
The first column in the output describes the type of the object, the second the
data type, and the third the shape. The latter two columns are only used for
fields and attributes. 

