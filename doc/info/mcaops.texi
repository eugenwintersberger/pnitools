@command{mcaops} is a program acting on MCA data. 

@example
mcaops [COMMAND] [OPTIONS] [INPUT FILE| - ]
@end example

@noindent
@command{mcaops} is a utility program applying certain operations on MCA data.
The MCA data can be either read from a file or from standard input. MCA data is
passed in two columns, the first containing the bin number or the bin center
value and the second the bin data. Actually only FIO file format is supported.

All results are written to standard output. This allows several @command{mcaops}
commands to be chained using the pipe operator. 

The behavior of @command{mcaops} is controlled via the command string which is
passed as the first argument to the program.  Currently the following commands
are available:
@table @samp
@item max     
find the value and its position in the spectrum
@item sum
add all value in the spectrum
@item rebin   
rebin the spectrum to new bin sizes
@item scale
scale the bin centers of the spectrum
@item dump
dump channel and mca data unchanged to standard out
@end table
@noindent
These operations can roughly devided into two groups: accumulating and
non-accumulating operations. The former one reduces the entire MCA data to a
single number while the latter one preserves the spectrum character of the data
(though rebining maybe alters the number of bins). 


@menu 
* Program options:mcaops_options. command line options of @command{mcaops}
* Examples:mcaops_examples. usage examples for @command{mcaops}
* Details:mcaops_details. detailed explanation of the various commands
@end menu


@node mcaops_options
@subsection Program options

In general effect a particular option passed to @command{mcaops} has on the input data
depends on the operation that should be carried out. However, there are some
global options which always have the same effect on the behavior of the program
@table @samp
@item -h
@itemx --help
Print a usage message and exit.
@item -v
@itemx --verbose
Produce verbose output, printing information regarding the specified options and
objects.  All output is printed to standard error allowing you to redirect
payload data to an other program while still watching debugging output.
@item -q
@itemx --quiet
Suppress all unnecessary output (the counterpart of @option{-v})
@item --header
print a header before dumping the output to standard out
@item --xolumn=@var{COLNAME}
specify the name of the column to choose from the input to use as bin-center or
-index values. This option is only useful when used in connection with FIO
files.
@item --ycolumn=@var{COLNAME}
specify the name of the column to use for MCA data. This option is only useful
with a FIO file. 
@end table

@noindent
Options for the @command{rebin} operation
@table @samp
@item -b
@itemx --binsize=@var{NBINS}
defines the number of bins that should be collated during rebining. 
@item --noxrebin 
do not rebin the x-axis. Instead use indices for the output. 
@item --normalize 
normalize the rebinned data.
@end table

@noindent
Options for the  @command{scale} operation:
@table @samp
@item -c
@itemx --center=@var{CENTER}
defines the index of the center bin used for rescaling. 
@item -d
@itemx --delta=@var{DELTA}
defines the step width for the rebin operation
@item -x
@itemx --cvalue=@var{CENTERVALUE}
the value of the center bin.
@end table

@noindent
The @command{sum} and @command{max} command have no additional options.

@node mcaops_examples
@subsection Examples

Lets start with a very simple example reading data form standard input and using
the accumulating operations @command{sum} and @command{max}. For the sake of
convenience a data file with the following content should be created 
@example
0 1
1 0
2 10
3 50
4 100
5 200
6 70
7 150
8 20
9 1
10 0
@end example
@noindent
and named @file{test.dat}. Here the first column is the channel
index while the second holds the channel data.  
With 
@example
$ GCMD="set xlabel \"channels\"; set xtics -2,1,12; plot '-' u 1:2 w boxes"
$ cat test.dat | gnuplot -p -e "$GCMD" 
@end example
@noindent 
gives
@float
@center @image{pics/mcaops_testdata,,3in,,.pdf}
@end float

@noindent
Lets start with the accumulative commands.  To compute the sum of the data
stored use
@example 
$ cat test.dat | mcaops sum 
602
@end example 
@noindent
where the output, 602, is the sum of values stored in the second column.
Analogously, to find the maximum use
@example 
$> cat test.dat | mcaops max
5   200
@end example 
@noindent
the two  numbers are the index of the maximum and its value respectively. 
It is important to note that the index is 0-based like in C. 

@example
$ cat test.dat | mcaops rebin --noxrebin -b3
0       11
1       350
2       240
3       1
$ cat test.dat | mcaops rebin --noxrebin -b3 | gnuplot -p -e "$GCMD"
@end example
@float
@center @image{pics/mcaops_rebin3,,3in,,.pdf}
@end float
@noindent
@command{mcaops} does not normalize the re-binned data by default. To normalize
the data use the @option{--normalize}. 

@example
$ cat test.dat | mcaops rebin --noxrebin --normalize -b3 
0       3.66667
1       116.667
2       80
3       0.5
@end example

@noindent
The @option{--noxrebin} option tells the program to not rebin the x-axis.
Typically one would not use this option if the x-axis has some physical meaning
(instead of just bin numbers as in this example). 

Another operation is to scale the data. This means that the channel numbers are
associated with a particular numeric value (a time for instance).

@example
$ cat test.dat | mcaops scale -c5 -d0.5 -x0.0
-2.5    1
-2      0
-1.5    10
-1      50
-0.5    100
0       200
0.5     70
1       150
1.5     20
2       1
2.5     0
@end example

@noindent 
Here the maximum channel (5) is used as the origin of the new axis. The axis
value at the origin is set to 0.0 and the step size to 0.5. 

Though @command{mcaops} currently not supports Nexus files, one can use it in
connection with @command{ncat} by piping the output of @command{nxcat} as new
input to @command{mcaops}. See @ref{nxcat} for more information.

@node mcaops_details
@subsection What the commands are really doing

This section gives detailed information about the functionality of the different
@command{mcaops} commands in particular about the @command{scale} and the
@command{rebin} command. Before we can do this a bit of terminology is required. 
MCAs usually produce histogram data as shown in this image
@float
@center @image{pics/mca_basics_1,,3in,,.pdf}
@end float
@noindent 
Here, the MCA is counting events in different energy windows of equal size
@math{\Delta E}. Every bin @math{b_i} has a center energy @math{c_i} given by 
@math{c_i = E_i+{{\Delta E} \over {2}}}. To keep the documentation consistent
some terms will be defined 
@itemize @bullet
@item
@math{b_i} will denote the @math{i}-th bin of the histogram
@item
@math{\Delta b} denotes the width of the bins (it is assumed that all bins have
the same size)
@item
@math{c_i} denotes the center value of the @math{i}-th bin
@item
@math{i} just denotes the index of the bins starting from @math{0}.
@end itemize
When a histogram is plotted the abscissa is typically showing the @math{c_i}
while the ordinate shows the number of counts for each bin. If no bin center
values are available typically the index of the bins is shown along the
abscissa. 

@subsubsection The @command{scale} command

The @command{scale} command of @command{mcaops} assigns new values to the center
values of the histogram bins with respect to a reference bin. 
To compute the new center values from incoming
data several parameters are required which must be either provided by the user
or in some cases can be inferred automatically from the data.
Those parameters are 
@itemize @bullet 
@item
the index of the reference bin @math{i_{ref}} 
@item 
a center value for the reference bin  @math{c_{ref}}
@item 
and the new width of the binds @math{\Delta b}
@end itemize
@noindent
The index of the reference bin can either be computed from the maximum position
of the histogram or can be passed as a command line option by the user. With
these parameters the new center values for the binds can be computed using the
following linear function
@tex
$$
c_i = c_{ref} + \Delta b (i-i_{ref})
$$
@end tex


@math{\sin(x)dx_2}

@subsubsection The @command{rebin} command
